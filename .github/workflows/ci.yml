name: CI

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-generator:
    name: Test Generator CLI
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run generator tests
      run: npm test
      
    - name: Check code style
      run: npm run lint || true

  test-backend-template:
    name: Test Backend Template
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: templates/common/backend/requirements.txt
    
    - name: Install dependencies
      working-directory: templates/common/backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio httpx
    
    - name: Run backend tests
      working-directory: templates/common/backend
      env:
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
        SECRET_KEY: test-secret-key-for-ci
        ENVIRONMENT: test
      run: |
        pytest tests/ -v --cov=app --cov-report=term-missing --cov-report=xml
    
    - name: Upload backend coverage
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage
        path: templates/common/backend/coverage.xml

  test-frontend-mui:
    name: Test Frontend MUI Template
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      working-directory: templates/frontend-mui
      run: npm ci --legacy-peer-deps
    
    - name: Run tests
      working-directory: templates/frontend-mui
      run: npm test -- --watchAll=false --coverage --passWithNoTests
      env:
        CI: true
    
    - name: Check build
      working-directory: templates/frontend-mui
      run: npm run build
      env:
        CI: false  # Disable treating warnings as errors for now
    
    - name: Upload MUI coverage
      uses: actions/upload-artifact@v4
      with:
        name: mui-coverage
        path: templates/frontend-mui/coverage/

  test-frontend-tailwind:
    name: Test Frontend Tailwind Template
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      working-directory: templates/frontend-tailwind
      run: npm ci --legacy-peer-deps
    
    - name: Run tests
      working-directory: templates/frontend-tailwind
      run: npm test -- --watchAll=false --coverage --passWithNoTests
      env:
        CI: true
    
    - name: Check build
      working-directory: templates/frontend-tailwind
      run: npm run build
      env:
        CI: false  # Disable treating warnings as errors for now
    
    - name: Upload Tailwind coverage
      uses: actions/upload-artifact@v4
      with:
        name: tailwind-coverage
        path: templates/frontend-tailwind/coverage/

  integration-test:
    name: Integration Test - Generate Project
    runs-on: ubuntu-latest
    needs: [test-generator, test-backend-template, test-frontend-mui, test-frontend-tailwind]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install generator dependencies
      run: npm ci
    
    - name: Generate test project with MUI
      run: |
        echo -e "test-project-mui\n1\nlocalhost\n5432\ntestdb\ntestuser\ntestpass\n8000\n3000\n" | npm start
        ls -la test-project-mui/
    
    - name: Generate test project with Tailwind
      run: |
        echo -e "test-project-tailwind\n2\nlocalhost\n5432\ntestdb\ntestuser\ntestpass\n8000\n3001\n" | npm start
        ls -la test-project-tailwind/
    
    - name: Check generated project structure
      run: |
        # Check MUI project
        test -f test-project-mui/docker-compose.yml
        test -d test-project-mui/backend
        test -d test-project-mui/frontend
        test -f test-project-mui/.env
        
        # Check Tailwind project
        test -f test-project-tailwind/docker-compose.yml
        test -d test-project-tailwind/backend
        test -d test-project-tailwind/frontend
        test -f test-project-tailwind/.env

  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [integration-test]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install generator dependencies
      run: npm ci
    
    - name: Generate test project
      run: |
        echo -e "docker-test-project\n1\nlocalhost\n5432\ntestdb\ntestuser\ntestpass\n8000\n3000\n" | npm start
    
    - name: Test Docker Compose build
      working-directory: docker-test-project
      run: |
        docker-compose build
        docker-compose config