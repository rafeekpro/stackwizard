name: Publish to NPM

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.check.outputs.should-publish }}
      version: ${{ steps.check.outputs.version }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Check if version needs publishing
      id: check
      run: |
        # Get current version from package.json
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        echo "Current package.json version: $PACKAGE_VERSION"
        
        # Check if this version exists on NPM
        NPM_VERSION=$(npm view @rafeekpro/stackwizard version 2>/dev/null || echo "0.0.0")
        echo "Latest NPM version: $NPM_VERSION"
        
        if [ "$PACKAGE_VERSION" != "$NPM_VERSION" ]; then
          echo "Version $PACKAGE_VERSION needs to be published"
          echo "should-publish=true" >> $GITHUB_OUTPUT
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
        else
          echo "Version $PACKAGE_VERSION is already published"
          echo "should-publish=false" >> $GITHUB_OUTPUT
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
        fi

  publish:
    needs: check-version
    if: needs.check-version.outputs.should-publish == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test || echo "No tests found"
    
    - name: Run linter
      run: npm run lint
    
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.check-version.outputs.version }}
        release_name: Release v${{ needs.check-version.outputs.version }}
        body: |
          ## üöÄ StackWizard v${{ needs.check-version.outputs.version }}
          
          ### Installation
          ```bash
          npm install -g @rafeekpro/stackwizard
          ```
          
          ### Usage
          ```bash
          stackwizard
          # or
          npx @rafeekpro/stackwizard
          ```
          
          Check the [changelog](https://github.com/rafeekpro/stackwizard/commits/main) for details.
        draft: false
        prerelease: false
    
    - name: Notify Success
      if: success()
      run: |
        echo "‚úÖ Successfully published version ${{ needs.check-version.outputs.version }} to NPM!"
        echo "üì¶ Package: https://www.npmjs.com/package/@rafeekpro/stackwizard"
        echo "üè∑Ô∏è Release: https://github.com/rafeekpro/stackwizard/releases/tag/v${{ needs.check-version.outputs.version }}"